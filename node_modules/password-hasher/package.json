{
  "name": "password-hasher",
  "version": "1.0.1",
  "description": "simple password hashing and ldap rfc 2307 support",
  "author": {
    "name": "Christoph Hartmann",
    "email": "chris@lollyrock.com"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt-contrib-jshint": "~0.11.2",
    "grunt-mocha-test": "~0.12.7"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "# password-hasher\n\n[![Build Status](https://travis-ci.org/chris-rock/password-hasher.svg?branch=master)](https://travis-ci.org/chris-rock/password-hasher) [![NPM version](https://img.shields.io/npm/v/password-hasher.svg)](https://www.npmjs.com/package/password-hasher)\n\nSimplify the generation of password hashes. In addition it supports [rfc2307](https://www.ietf.org/rfc/rfc2307.txt) for usage with LDAP.\n\n## Getting Started\n\nInstall the module with: `npm install password-hasher`\n\n```javascript\nvar password-hasher = require('password-hasher');\n\n// get hash\nvar hash = passwordhasher.createHash('ssha512', 'alice', new Buffer('83d88386463f0625', 'hex'));\n// returns '21ea8a8975921163474f74e4349eb6b3185b95ada619ae6d83c16dae836eb9c07c33331bf7db8f89d609a01f6278d6e5be7c516a1748cbe87b4cfc125e1e2c9e'\n\n// get rfc 2307 hash\nvar rfcHash = passwordhasher.formatRFC2307(hash)\n// returns '{ssha512}IeqKiXWSEWNHT3TkNJ62sxhbla2mGa5tg8FtroNuucB8MzMb99uPidYJoB9ieNblvnxRahdIy+h7TPwSXh4snoPYg4ZGPwYl'\n```\n\n## Documentation\n\nThe following hash schemes are supported. \n\nWith salt:\n\n* `ssha512` (recommended)\n* `ssha384`\n* `ssha256`\n* `ssha`\n* `smd5`\n\nWithout salt:\n\n* `sha512`\n* `sha384`\n* `sha256`\n* `sha`\n* `md5`\n\n## Contributing\n\nPRs are welcome. Code style is checked via jshint.\n\n## License\nCopyright (c) 2014-2015 Christoph Hartmann. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "password-hasher@1.0.1",
  "_from": "password-hasher@~1.0.1"
}
